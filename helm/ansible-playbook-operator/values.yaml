operator:
  image:
    repository: kenchrcum/ansible-playbook-operator
    tag: "0.1.0"
    # Optional: pin image by digest for enhanced security and reproducibility
    # When digest is provided, it takes precedence over tag
    # Format: sha256:abc123def456...
    digest: ""
    pullPolicy: IfNotPresent
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 512Mi
  leaderElection: true
  watch:
    # one of: namespace|all
    scope: namespace
  metrics:
    enabled: false
    serviceMonitor:
      enabled: true
  serviceAccount:
    create: true
    name: ""

executorDefaults:
  image:
    repository: kenchrcum/ansible-runner
    tag: latest
    # Optional: pin image by digest for enhanced security and reproducibility
    # When digest is provided, it takes precedence over tag
    # Format: sha256:abc123def456...
    digest: ""
    pullPolicy: IfNotPresent
  serviceAccount:
    # Whether to create a separate ServiceAccount for executor Jobs
    create: true
    # Name of the executor ServiceAccount (auto-generated if empty)
    name: ""
    # RBAC preset for executor permissions: minimal (default), scoped, cluster-admin
    # minimal: least-privilege permissions for basic Ansible execution
    # scoped: extended permissions for cross-namespace operations
    # cluster-admin: full cluster permissions (use with extreme caution)
    rbacPreset: minimal
  cache:
    # Default cache strategy for repositories that don't specify one
    # Options: none, pvc
    strategy: none
    # Default PVC name when strategy is pvc
    pvcName: ""
    # Whether to create a PVC for caching (optional)
    createPVC: false
    # Storage size for the cache PVC when createPVC is true
    storageSize: "10Gi"
    # Storage class name for the cache PVC (optional)
    storageClassName: ""

rbac:
  # RBAC permission preset: minimal (default), scoped, or cluster-admin
  # minimal: least-privilege namespaced permissions for single-namespace operation
  # scoped: cross-namespace access for cluster-wide scenarios
  # cluster-admin: full cluster permissions (use with caution)
  preset: minimal

  # Enable cluster read permissions for Kopf preflight checks (CRDs, namespaces)
  # Only applies when preset is 'minimal'; ignored for other presets
  clusterRead: true

  # Secret access restriction (optional)
  # When enabled, restricts Secret access to only explicitly referenced names
  # This provides enhanced security but requires operational overhead to maintain
  # See examples/values-secret-restriction.yaml for configuration examples
  secretRestriction:
    # Enable Secret access restriction using resourceNames
    enabled: false
    # List of Secret names the operator is allowed to access
    # When empty, operator can access all Secrets in namespace (default behavior)
    # When populated, operator can only access Secrets listed here
    # Note: This requires manual maintenance when new Secrets are referenced
    allowedSecrets: []
    # Cross-namespace Secret access (only applies when preset is 'scoped' or 'cluster-admin')
    # Maps namespace -> list of allowed Secret names
    crossNamespaceSecrets: {}

# NetworkPolicy configuration for enhanced security
# Controls egress traffic from operator and executor pods
# See examples/values-networkpolicies.yaml for configuration examples
networkPolicies:
  # Enable NetworkPolicy creation (requires CNI with NetworkPolicy support)
  enabled: false

  # NetworkPolicy preset: none, restrictive, moderate, permissive
  # none: No NetworkPolicies created (default)
  # restrictive: Only allow egress to Git endpoints and container registries
  # moderate: Allow DNS, Git endpoints, registries, and Kubernetes API
  # permissive: Allow all egress (not recommended for production)
  preset: none

  # Git endpoints configuration
  git:
    # List of Git hostnames/IPs to allow egress to
    # Common Git providers are pre-configured but can be customized
    endpoints:
      - github.com
      - gitlab.com
      - bitbucket.org
      - gitea.com
      - gitee.com
    # Custom Git endpoints (additional to the defaults above)
    custom: []
    # Ports to allow for Git traffic (default: 22 for SSH, 443 for HTTPS)
    ports:
      - port: 22
        protocol: TCP
      - port: 443
        protocol: TCP
      - port: 80
        protocol: TCP

  # Container registry endpoints configuration
  registries:
    # List of registry hostnames/IPs to allow egress to
    # Common registries are pre-configured but can be customized
    endpoints:
      - docker.io
      - registry-1.docker.io
      - gcr.io
      - k8s.gcr.io
      - quay.io
      - registry.k8s.io
      - ghcr.io
    # Custom registry endpoints (additional to the defaults above)
    custom: []
    # Ports to allow for registry traffic (default: 443 for HTTPS)
    ports:
      - port: 443
        protocol: TCP
      - port: 80
        protocol: TCP

  # DNS configuration
  dns:
    # Allow DNS resolution (required for most operations)
    enabled: true
    # DNS server endpoints (usually cluster DNS)
    endpoints:
      - 10.96.0.10  # kube-dns default
      - 169.254.20.10  # CoreDNS alternative
    # DNS ports
    ports:
      - port: 53
        protocol: UDP
      - port: 53
        protocol: TCP

  # Kubernetes API server access
  kubernetes:
    # Allow access to Kubernetes API server
    enabled: true
    # API server endpoints (usually cluster IP)
    endpoints:
      - kubernetes.default.svc.cluster.local
    # API server ports
    ports:
      - port: 443
        protocol: TCP

  # Additional egress rules (custom)
  # List of additional egress rules for specific use cases
  # Each rule should specify namespaceSelector, podSelector, and ports
  additionalRules: []

  # Example additional rules:
  # additionalRules:
  #   - to:
  #       - namespaceSelector:
  #           matchLabels:
  #             name: monitoring
  #       - podSelector:
  #           matchLabels:
  #             app: prometheus
  #     ports:
  #       - port: 9090
  #         protocol: TCP

# CRDs will be delivered under crds/ in the chart (added later)
