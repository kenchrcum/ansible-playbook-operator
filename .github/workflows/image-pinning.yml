name: Image Pinning and Release

on:
  push:
    tags:
      - 'v*'
  pull_request:
    paths:
      - 'Dockerfile'
      - 'src/**'
      - 'helm/**'
  schedule:
    - cron: '0 0 * * 1'  # Weekly digest updates

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Job to build and push images with digest information
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Get image digest
        id: digest
        run: |
          DIGEST=$(docker inspect ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }} --format='{{index .RepoDigests 0}}' | cut -d'@' -f2)
          echo "digest=$DIGEST" >> $GITHUB_OUTPUT
          echo "Image digest: $DIGEST"

      - name: Update values with digest
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          # Update Helm values with the new digest
          sed -i "s|digest: \".*\"|digest: \"${{ steps.digest.outputs.digest }}\"|g" helm/ansible-playbook-operator/values.yaml

          # Commit the changes
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add helm/ansible-playbook-operator/values.yaml
          git commit -m "chore: update operator image digest to ${{ steps.digest.outputs.digest }}" || exit 0
          git push origin ${{ github.ref_name }}

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          body: |
            ## Image Digest Information

            **Operator Image Digest:** `${{ steps.digest.outputs.digest }}`

            **Image Reference:** `${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.digest.outputs.digest }}`

            ## Usage

            Update your Helm values to use the pinned image:

            ```yaml
            operator:
              image:
                repository: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                digest: "${{ steps.digest.outputs.digest }}"
            ```

            ## Security

            This release uses digest pinning for enhanced security and reproducibility.
            See [Image Pinning Documentation](docs/image-pinning.md) for more details.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Job to update executor image digests
  update-executor-digest:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get latest executor digest
        id: executor-digest
        run: |
          # Get the latest digest for the executor image
          EXECUTOR_DIGEST=$(crane digest kenchrcum/ansible-runner:latest)
          echo "executor-digest=$EXECUTOR_DIGEST" >> $GITHUB_OUTPUT
          echo "Executor digest: $EXECUTOR_DIGEST"

      - name: Update executor digest in values
        run: |
          # Update executor digest in values.yaml
          sed -i "s|digest: \".*\"|digest: \"${{ steps.executor-digest.outputs.executor-digest }}\"|g" helm/ansible-playbook-operator/values.yaml

          # Check if changes were made
          if git diff --quiet helm/ansible-playbook-operator/values.yaml; then
            echo "No changes to executor digest"
            exit 0
          fi

          # Commit the changes
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add helm/ansible-playbook-operator/values.yaml
          git commit -m "chore: update executor image digest to ${{ steps.executor-digest.outputs.executor-digest }}"
          git push origin main

      - name: Create PR for executor digest update
        if: failure()
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: update executor image digest to ${{ steps.executor-digest.outputs.executor-digest }}"
          title: "Update executor image digest"
          body: |
            ## Executor Image Digest Update

            **New Digest:** `${{ steps.executor-digest.outputs.executor-digest }}`

            This PR updates the default executor image digest for enhanced security and reproducibility.

            ## Changes

            - Updated `executorDefaults.image.digest` in `helm/ansible-playbook-operator/values.yaml`

            ## Verification

            Please verify that:
            - [ ] The digest is valid and accessible
            - [ ] The image works with existing playbooks
            - [ ] No breaking changes are introduced

            ## Security

            This update uses digest pinning to ensure immutable, reproducible deployments.
          branch: update-executor-digest
          delete-branch: true

  # Job to validate image pinning configuration
  validate-pinning:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate Helm values
        run: |
          # Check if digest format is valid
          if grep -q 'digest: "sha256:' helm/ansible-playbook-operator/values.yaml; then
            echo "✓ Valid digest format found"
          else
            echo "⚠ No digest pinning configured"
          fi

          # Validate Helm chart
          helm lint helm/ansible-playbook-operator/

      - name: Test image references
        run: |
          # Test that image references are valid
          python3 -c "
          import re
          import sys

          with open('helm/ansible-playbook-operator/values.yaml', 'r') as f:
              content = f.read()

          # Check for valid digest format
          digest_pattern = r'digest: \"sha256:[a-f0-9]{64}\"'
          if re.search(digest_pattern, content):
              print('✓ Valid digest format found')
          else:
              print('⚠ No valid digest format found')

          # Check for empty digest
          if 'digest: \"\"' in content:
              print('⚠ Empty digest found - will fall back to tag')

          print('✓ Image pinning validation completed')
          "

      - name: Validate Dockerfile
        run: |
          # Check if Dockerfile supports digest pinning
          if grep -q 'BASE_DIGEST' Dockerfile; then
            echo "✓ Dockerfile supports digest pinning"
          else
            echo "⚠ Dockerfile does not support digest pinning"
            exit 1
          fi

          # Validate Dockerfile syntax
          docker build --dry-run .
