---
globs: "**/*.py,helm/**/*.yaml,examples/**/*.yaml"
description: "Guidelines for implementing and using PVC-backed caching for Ansible collections and roles."
---
# PVC-Backed Cache Implementation

## Overview
The Ansible Playbook Operator supports optional PVC-backed caching for `~/.ansible` collections and roles to improve performance for repositories that frequently install Galaxy content.

## CRD Configuration
Repository resources can enable caching via:
```yaml
spec:
  cache:
    strategy: pvc  # or "none" (default)
    pvcName: my-cache-pvc  # Required when strategy is "pvc"
```

## Helm Configuration
Default cache settings can be configured via Helm values:
```yaml
executorDefaults:
  cache:
    strategy: none  # Default strategy for repositories
    pvcName: ""  # Default PVC name
    createPVC: false  # Auto-create PVC via Helm
    storageSize: "10Gi"  # PVC size when createPVC=true
    storageClassName: ""  # Optional storage class
```

## Implementation Details
- Cache is mounted to `/home/ansible/.ansible` in executor pods
- Only caches Ansible collections/roles, not repository working trees
- PVC must be accessible by executor pods in the same namespace
- Cache persistence improves performance across playbook runs

## Security Considerations
- Cache PVCs should use appropriate storage classes for performance and security
- Consider PVC access modes based on concurrent execution needs
- Cache data may contain sensitive information if collections include secrets

## Testing
- Unit tests must cover all cache strategy combinations
- Integration tests should verify cache mounting and persistence
- Performance benchmarks should demonstrate caching benefits
