# Cursor Rules â€” Architecture & Documentation

These rules guide the creation and maintenance of design and documentation artifacts.

## Scope
- Applies to files in `architecture/`, `docs/`, and `examples/`.

## Document Principles
- Design-first: update the plan before coding significant changes.
- Keep documents concise but complete; prefer lists and tables to prose.
- Include rationale for decisions and trade-offs; link to alternatives when relevant.

## Change Management
- Each architectural change shall:
  - Update `architecture/development-plan.md` with the new desired state
  - Note implications for CRDs, RBAC, Helm, and testing
  - Add risks and mitigations if applicable
- Add examples to `examples/` that reflect the latest design.

## CRD Documentation
- Document spec and status fields with defaults and validation summaries.
- Include condition types and their meaning; provide sample YAML for each CRD.
- Maintain a changelog section for CRD version changes and migrations.

## Security & Compliance
- Call out security defaults explicitly (RBAC presets, pod security, image pinning).
- Never include real secret values in examples; reference `Secret` names only.

## Review Checklist (Architecture PRs)
- Are status conditions defined and updated for new features?
- Are observability signals (events, metrics, logs) covered?
- Are least-privilege RBAC and multi-tenancy implications addressed?
- Does Helm layout keep CRDs under `crds/` and avoid templating schemas?
- Are upgrade/migration steps documented when applicable?

## Example Quality Bar
- Examples must be self-contained and runnable on kind/minikube.
- Use minimal privileges by default; include opt-in examples for elevated scenarios.
- Show manual-run annotation usage and sample CronJob outcomes in `status`.
